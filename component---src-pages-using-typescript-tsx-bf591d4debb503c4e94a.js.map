{"version":3,"sources":["webpack:///./src/pages/using-typescript.tsx","webpack:///./src/pages/using-typescript-Article.module.css"],"names":["module","exports"],"mappings":"6FAAA,yFAcA,EAAgB,oB,YAAA,U,aAqChB,UAzBA,yCACA,yBACA,qBAAI,MAAJ,qBACA,uBACA,sBAAI,UAAJ,4BADA,0CAEA,qEACA,0BADA,2EAEA,0BAFA,eAFA,wEAOA,qEACA,0BADA,qCAEA,0BAFA,8BAEA,0BAFA,aAPA,UAWA,qFACA,OADA,UAXA,KAcA,+DAEA,qBAAI,KAAJ,6CAFA,kCAjBA,S,uBCzBAA,EAAOC,QAAU,CAAC,KAAO,+CAA+C,KAAO","file":"component---src-pages-using-typescript-tsx-bf591d4debb503c4e94a.js","sourcesContent":["// If you don't want to use TypeScript you can delete this file!\nimport * as React from \"react\"\nimport { PageProps, graphql } from \"gatsby\"\nimport styled from \"astroturf/react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\ntype DataProps = {\n  site: {\n    buildTime: string\n  }\n}\n\nconst Article = styled.article`\n  p {\n    ${\"@apply font-normal leading-relaxed mt-4\"};\n  }\n  em {\n    ${\"@apply italic rounded-sm p-1 bg-gray-100 text-yellow-500\"};\n  }\n  a {\n    ${\"@apply text-purple-600 underline\"};\n  }\n`\n\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({ data, path }) => (\n  <Layout>\n    <SEO title=\"Using TypeScript\" />\n    <Article>\n      <h1 className=\"text-3xl leading-relaxed\">Gatsby supports TypeScript by default!</h1>\n      <p>\n        This means that you can create and write <em>.ts/.tsx</em> files for your pages, components\n        etc. Please note that the <em>gatsby-*.js</em> files (like gatsby-node.js) currently don't\n        support TypeScript yet.\n      </p>\n      <p>\n        For type checking you'll want to install <em>typescript</em> via npm and run{\" \"}\n        <em>tsc --init</em> to create a <em>.tsconfig</em> file.\n      </p>\n      <p>\n        You're currently on the page \"{path}\" which was built on {data.site.buildTime}.\n      </p>\n      <p>\n        To learn more, head over to our{\" \"}\n        <a href=\"https://www.gatsbyjs.com/docs/typescript/\">documentation about TypeScript</a>.\n      </p>\n    </Article>\n  </Layout>\n)\n\nexport default UsingTypescript\n\nexport const query = graphql`\n  {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n    }\n  }\n`\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cls1\":\"using-typescript-Article-module--cls1--XyFCb\",\"cls2\":\"using-typescript-Article-module--cls2--p4ZXd using-typescript-Article-module--cls1--XyFCb\"};"],"sourceRoot":""}